// Seperate the pizza qualities from what can be done to the pizza via classes.


public static class Order {
  private String size;
  private String crust;
  private String style;

  private Pizza(PizzaService ps) {
    this.size = ps.size;
    this.crust = this.crust;
    this.style = this.style;
  } 

  public static class PizzaService {
    private String size;
    private String crust;
    private String topping;   //would need to be array or enum 
    // setters to change Pizza
    Pizza build() {
      return new Pizza(this);
    }
  }
}

// Probably not right. Just jotting down. 
Order pizza = new Order.Pizza
                       .setSize("Small")
                       .setCrust("Thin")
                       .addTopping("Pineapple")
                       .build();

// When an order gets finalized the entire order
// should be a new HashMap entry where <K, V> is 
// <CustomerInformation, OrderInformation>. 

// Kitchen "Makeline" screen would immediately enqueue the order info.
// Chef would dequeue the items via controller as he finished them. 

// Once the values from an entire map entry are dequeued,
// the entry information is formatted to be printed onto a ticket. 
